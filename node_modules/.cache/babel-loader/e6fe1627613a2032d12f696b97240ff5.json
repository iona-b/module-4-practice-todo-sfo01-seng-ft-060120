{"ast":null,"code":"var _jsxFileName = \"/Users/ionabrabender/Flatiron/code/module-4-practice-todo-sfo01-seng-ft-060120/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport FilterContainer from './components/FilterContainer.js';\nimport { CATEGORIES } from './data';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentFilter: 'All',\n      filteredTasks: [],\n      tasks: [{\n        text: 'Buy rice',\n        category: 'Food'\n      }, {\n        text: 'Save a tenner',\n        category: 'Money'\n      }, {\n        text: 'Build a todo app',\n        category: 'Code'\n      }, {\n        text: 'Build todo API',\n        category: 'Code'\n      }, {\n        text: 'Get an ISA',\n        category: 'Money'\n      }, {\n        text: 'Cook rice',\n        category: 'Food'\n      }, {\n        text: 'Tidy house',\n        category: 'Misc'\n      }]\n    };\n\n    this.filterTasks = event => {\n      let currentFilter = event.target.name;\n\n      if (event.target.name !== 'All') {\n        let updatedTasks = this.state.tasks.filter(task => {\n          return task.category === event.target.name;\n        });\n        this.setState({\n          currentFilter,\n          filteredTasks: updatedTasks\n        });\n      } else {\n        this.setState({\n          filteredTasks: this.state.tasks\n        });\n      }\n\n      console.log;\n    };\n\n    this.newTask = event => {\n      event.preventDefault();\n      let data = {\n        text: event.target.input.value,\n        category: event.target.code.value\n      };\n      this.setState({\n        tasks: [...this.state.tasks, data]\n      });\n\n      if (this.state.currentFilter === \"All\") {\n        this.setState({\n          filteredTasks: [...this.state.filteredTasks, data]\n        });\n      } else if (event.target.code.value === this.state.currentFilter) {\n        this.setState({\n          filteredTasks: [...this.state.filteredTasks, data]\n        });\n      }\n    };\n\n    this.deleteTask = (task, event) => {\n      // debugger\n      this.setState({\n        currentFilter: this.state.currentFilter\n      });\n      let updatedTasks = this.state.tasks.filter(oneTask => {\n        return oneTask.text !== task.text;\n      });\n      console.log(this.state.currentFilter);\n\n      if (this.state.currentFilter === \"All\") {\n        this.setState({\n          filteredTasks: updatedTasks\n        });\n      } else if (task.category === this.state.currentFilter) {\n        let updatedFilteredTasks = this.state.tasks.filter(oneTask => {\n          return oneTask.text !== task.text && oneTask.category === this.state.currentFilter;\n        });\n        this.setState({\n          tasks: updatedTasks,\n          filteredTasks: updatedFilteredTasks\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      filteredTasks: this.state.tasks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"My tasks\"), /*#__PURE__*/React.createElement(FilterContainer, {\n      className: \"categories\",\n      categories: CATEGORIES,\n      filteredTasks: this.state.filteredTasks,\n      filterTasks: this.filterTasks,\n      newTask: this.newTask,\n      deleteTask: this.deleteTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ionabrabender/Flatiron/code/module-4-practice-todo-sfo01-seng-ft-060120/src/App.js"],"names":["React","FilterContainer","CATEGORIES","App","Component","state","currentFilter","filteredTasks","tasks","text","category","filterTasks","event","target","name","updatedTasks","filter","task","setState","console","log","newTask","preventDefault","data","input","value","code","deleteTask","oneTask","updatedFilteredTasks","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport FilterContainer from './components/FilterContainer.js';\nimport { CATEGORIES } from './data'\n\nclass App extends React.Component {\n\n  state = {\n    currentFilter: 'All',\n    filteredTasks: [],\n    tasks: [\n      {\n        text: 'Buy rice',\n        category: 'Food'\n      },\n      {\n        text: 'Save a tenner',\n        category: 'Money'\n      },\n      {\n        text: 'Build a todo app',\n        category: 'Code'\n      },\n      {\n        text: 'Build todo API',\n        category: 'Code'\n      },\n      {\n        text: 'Get an ISA',\n        category: 'Money'\n      },\n      {\n        text: 'Cook rice',\n        category: 'Food'\n      },\n      {\n        text: 'Tidy house',\n        category: 'Misc'\n      }\n    ]\n  }\n\n  componentDidMount() {\n    this.setState ({\n      filteredTasks: this.state.tasks\n    })\n  }\n\n  filterTasks = (event) => {\n    let currentFilter = event.target.name\n    if (event.target.name !== 'All') {\n      let updatedTasks = this.state.tasks.filter ((task) => {\n        return task.category === event.target.name\n      })\n      this.setState ({\n        currentFilter,\n        filteredTasks: updatedTasks\n      })\n    } else {\n      this.setState ({\n        filteredTasks: this.state.tasks\n      })\n    }\n    console.log\n  }\n\n  newTask = (event) => {\n    event.preventDefault()\n\n    let data = {\n      text: event.target.input.value,\n      category: event.target.code.value,\n    }\n\n    this.setState ({\n      tasks: [\n        ...this.state.tasks,\n        data\n      ]\n    })\n\n    if (this.state.currentFilter === \"All\") {\n      this.setState ({\n        filteredTasks: [\n          ...this.state.filteredTasks,\n          data\n        ]\n      })\n    } else if (event.target.code.value === this.state.currentFilter) {\n      this.setState ({\n        filteredTasks: [\n          ...this.state.filteredTasks,\n          data\n        ]\n      })\n    }\n    \n  }\n\n  deleteTask = (task, event) => {\n    // debugger\n    this.setState ({\n      currentFilter: this.state.currentFilter\n    })\n    let updatedTasks = this.state.tasks.filter (oneTask => {\n      return oneTask.text !== task.text\n    })\n    console.log(this.state.currentFilter)\n    if (this.state.currentFilter === \"All\") {\n      this.setState ({\n        filteredTasks: updatedTasks\n      })\n    } else if (task.category === this.state.currentFilter) {\n      let updatedFilteredTasks = this.state.tasks.filter (oneTask => {\n        return oneTask.text !== task.text && oneTask.category === this.state.currentFilter\n      })\n      this.setState ({\n        tasks: updatedTasks,\n        filteredTasks: updatedFilteredTasks\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>My tasks</h2>\n        <FilterContainer className=\"categories\" categories={CATEGORIES} filteredTasks={this.state.filteredTasks} filterTasks={this.filterTasks} newTask={this.newTask} deleteTask={this.deleteTask} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}